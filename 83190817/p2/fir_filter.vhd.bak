--steven miller
--Section number: 11710
LIBRARY ieee;
USE ieee.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir_filter is
port
(
	start: in std_logic;
	resetn: in std_logic;
	clk: in std_logic;
	
	rdy: out std_logic;
);
end fir_filter;

architecture arch of fir_filter is

signal romaddressout : std_logic_vector(31 downto 0);
signal ramaddressout : std_logic_vector(31 downto 0);
signal firout : std_logic_vector(31 downto 0);
signal romgeneratesignal : std_logic;
signal ramgeneratesignal : std_logic;


component controller 
port
(
	start: in std_logic;
	resetn : in std_logic; --active-low
	clk : in std_logic;
	
	rdy: out std_logic;
	romgenerate: out std_logic;
	ramgenerate: out std_logic;
	datapathenable: out std_logic
);
end component;

component top_level 
generic(width : positive := 32);
port
(
	--inputs : in std_logic_vector(width-1 downto 0);
	ROMaddr: in std_logic_vector(9 downto 0);
	output: out std_logic_vector(width-1 downto 0);
	resetn: in std_logic;
	rden: in std_logic;
	clk: in std_logic
);
end component;

component address_generator 
port
(
	ingenerate : in std_logic;
	
	decodedaddress : out std_logic_vector(31 downto 0)
);
end component;

component RAM
port
(
	address	: IN STD_LOGIC_VECTOR (9 DOWNTO 0);
	clock		: IN STD_LOGIC  := '1';
	data		: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
	wren		: IN STD_LOGIC ;
	q		: OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
);
end component;

begin
controllercomponent: controller port map(start => start, resetn => resetn, clk => clk, rdy=> rdy,
													 romgenerate => romgeneratesignal, ramgenerate => ramgeneratesignal
													 );
firwithrom: top_level generic map(width=>32) port map(ROMaddr => romaddressout);
ramgenerator: address_generator port map();
romgenerator: address_generator port map();
outputram : RAM port map();

end arch;